name: SpringBoot CI with Maven - DEV

on:
  push:
    branches: [ "DEV" ]
  pull_request:
    branches: [ "DEV" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install -Pdev -e

      - name: Run Tests
        run: mvn test

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: assiya24/springboot-mysql-docker-dev
          tags: dev
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.8

      - name: Initialize Terraform
        run: terraform init -chdir=environments/dev

      - name: Apply Terraform
        run: terraform apply -auto-approve -chdir=environments/dev
      - name: Generate Ansible Inventory
        run: |
          terraform output -json > terraform_outputs.json
          ansible_inventory=$(cat <<EOF
          {
            "_meta": {
              "hostvars": {
                "example_instance": {
                 "ansible_host": "$(cat terraform_outputs.json | jq -r '.example_instance_private_ip.value')"
              }
            }
          },
            "example_group": {
              "hosts": ["example_instance"]
          }
        }
        EOF
        )
        echo "$ansible_inventory" > ansible_inventory.json