name: Deployment Workflow

on:
  push:
    branches:
      - dev
      - uat
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Get EC2 IP Addresses
        id: get_ec2_ips
        run: |
          #  echo "private_ip=$(terraform output private_ip)" >> $GITHUB_ENV
         #   echo "name=$(terraform output name)" >> $GITHUB_ENV
            echo "environment=$(terraform output environment)" >> $GITHUB_ENV
            echo "bastion_ip=$(terraform output dev_bastion_instance_ids)" >> $GITHUB_ENV

      - name: Check Ansible and Docker Installation
        id: check_ansible_docker
        run: |
         # ansible_installed=$(ssh -i /path/to/bastion/key.pem ec2-user@<BASTION_HOST_IP_OR_DOMAIN> "which ansible > /dev/null && echo 'true' || echo 'false'")
         # docker_installed=$(ssh -i /path/to/bastion/key.pem ec2-user@<BASTION_HOST_IP_OR_DOMAIN> "which docker > /dev/null && echo 'true' || echo 'false'")
          ansible_installed=$(ssh -i /path/to/bastion/key.pem ec2-user@${{ env.bastion_ip }} "which ansible > /dev/null && echo 'true' || echo 'false'")
          docker_installed=$(ssh -i /path/to/bastion/key.pem ec2-user@${{ env.bastion_ip }} "which docker > /dev/null && echo 'true' || echo 'false'")
          echo "ansible_installed=$ansible_installed" >> $GITHUB_ENV
          echo "docker_installed=$docker_installed" >> $GITHUB_ENV

      - name: Install Ansible and Docker on Bastion
        if: steps.check_ansible_docker.outputs.ansible_installed == 'false' || steps.check_ansible_docker.outputs.docker_installed == 'false'
        run: |
          #ssh -i /path/to/bastion/key.pem ec2-user@<BASTION_HOST_IP_OR_DOMAIN> "pip install ansible"
          #ssh -i /path/to/bastion/key.pem ec2-user@<BASTION_HOST_IP_OR_DOMAIN> "sudo yum install -y docker"
          #ssh -i /path/to/bastion/key.pem ec2-user@<BASTION_HOST_IP_OR_DOMAIN> "sudo systemctl enable docker"
          ssh -i /path/to/bastion/key.pem ec2-user@${{ env.bastion_ip }} "pip install ansible"
          ssh -i /path/to/bastion/key.pem ec2-user@${{ env.bastion_ip }} "sudo yum install -y docker"
          ssh -i /path/to/bastion/key.pem ec2-user@${{ env.bastion_ip }} "sudo systemctl enable docker"
         

      - name: Log in to Docker on Bastion
        run: |
          echo $DOCKER_PASSWORD | ssh -i /path/to/your/bastion/key.pem ec2-user@<BASTION_HOST_IP_OR_DOMAIN> "docker login --username $DOCKER_USERNAME --password-stdin"
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#################################################################################################################
      - name: Create Folder on Bastion
        run: ssh ec2-user@<BASTION_HOST_IP_OR_DOMAIN> "mkdir -p /path/on/bastion"

      - name: Copy Configuration Files to Bastion
        run: scp /path/to/source/config ec2-user@<BASTION_HOST_IP_OR_DOMAIN>:/path/on/bastion/
        # Replace with actual command to copy config files

      - name: Copy Inventory Files to Bastion
        run: scp inventory.yml ec2-user@<BASTION_HOST_IP_OR_DOMAIN>:/path/on/bastion/
        # Replace with actual command to copy inventory files

      - name: Copy Private Key to Bastion
        run: scp -i /path/to/your/bastion/key.pem /path/to/private_key.pem ec2-user@<BASTION_HOST_IP_OR_DOMAIN>:/path/on/bastion/
        # Replace with actual command to copy private key

      - name: Copy Playbooks to Bastion
        run: scp playbook.yml ec2-user@<BASTION_HOST_IP_OR_DOMAIN>:/path/on/bastion/
        # Replace with actual command to copy playbooks
#################################################################################################################

      - name: Run 'moveFilesTobastions.yml' Playbook on Bastion
        run: |
          ssh -i /path/to/your/bastion/key.pem \
            ec2-user@<BASTION_HOST_IP_OR_DOMAIN> \
            "ansible-playbook /path/on/bastion/moveFilesTobastions.yml"
        # Replace with actual command to run moveFilesTobastions.yml playbook on bastion

      - name: Run Ansible Playbook on Bastion
        run: |
          ssh -i /path/to/your/bastion/key.pem \
            ec2-user@<BASTION_HOST_IP_OR_DOMAIN> \
            "ansible-playbook /path/on/bastion/playbook.yml"
        # Replace with actual command to run playbook on bastion
